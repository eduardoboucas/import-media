///
/// Log a message either with `@error` if supported 
/// else with `@warn`, using `function-exists('at-error')`
/// to detect support.
/// 
/// @param {String} $message - Message to log
///
@function log($message) {
  // `== true` is needed for Sass 3.2 which has no support
  // for `function-exists(..)`. In Sass 3.2, this function
  // call is actually evaluated as string which is truthy.
  // By making sure it's `true`, we make Sass 3.2 go in
  // the `@else` condition.
  @if function-exists('at-error') == true {
    @error $message;
  } @else {
    @warn $message;
    $_: noop();
  }

  @return $message;
}

/// 
/// Wrapper mixin for the log function so it can be used with a more friendly
/// API than `@if log('..') {}` or `$_: log('..')`. Basically, use the function
/// within functions because it is not possible to include a mixin in a function
/// and use the mixin everywhere else because it's much more elegant.
///
/// @access private
///
/// @param {String} $message - Message to log
///
@mixin log($message) {
  @if log($message) {}
}


///
/// Function with no `@return` called next to `@warn` in Sass 3.3
/// to trigger a compiling error and stop the process.
/// 
/// @access private
///
@function noop() {}
